from transitions import Machine


class PizzaOrder:
    states = [
        {'name': 'awaits_order', 'on_enter': ['ask_about_order', 'cleanse_order']},
        {'name': 'order_started', 'on_enter': 'ask_pizza_size'},
        {'name': 'big_size_selected', 'on_enter': ['select_pizza_size', 'ask_payment_method']},
        {'name': 'small_size_selected', 'on_enter': ['select_pizza_size', 'ask_payment_method']},
        {'name': 'cash_payment_selected', 'on_enter': ['select_payment_method', 'ask_about_order_confirmation']},
        {'name': 'card_payment_selected', 'on_enter': ['select_payment_method', 'ask_about_order_confirmation']},
        {'name': 'order_confirmed', 'on_enter': 'acknowledge_order'},
        {'name': 'order_declined', 'on_enter': 'reject_order'},
    ]
    transitions = [
        {'trigger': 'start_order', 'source': 'awaits_order', 'dest': 'order_started'},
        {'trigger': 'select_big_pizza', 'source': 'order_started', 'dest': 'big_size_selected'},
        {'trigger': 'select_small_pizza', 'source': 'order_started', 'dest': 'small_size_selected'},
        {'trigger': 'select_cash_payment', 'source': ['big_size_selected', 'small_size_selected'],
         'dest': 'cash_payment_selected'},
        {'trigger': 'select_card_payment', 'source': ['big_size_selected', 'small_size_selected'],
         'dest': 'card_payment_selected'},
        {'trigger': 'confirm_order', 'source': ['cash_payment_selected', 'card_payment_selected'],
         'dest': 'order_confirmed'},
        {'trigger': 'decline_order', 'source': ['cash_payment_selected', 'card_payment_selected'],
         'dest': 'order_declined'},
        {'trigger': 'clean_order', 'source': ['decline_order', 'confirm_order'], 'dest': 'awaits_order'},
    ]
    starting_message = '–ü—Ä–∏–≤–µ—Ç, —É –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏: "–•–æ—á—É –ø–∏—Ü—Ü—É" üòâ'
    message = None

    payment_method = None
    pizza_size = None
    confirmed = False

    def __init__(self):
        self.machine = Machine(model=self, states=self.states, transitions=self.transitions, initial='awaits_order')
        self.message = self.starting_message

    def ask_pizza_size(self):
        self.message = '–ö–∞–∫—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–∏—Ü—Ü—É? –ë–æ–ª—å—à—É—é –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫—É—é?'

    def select_pizza_size(self):
        if self.state == 'big_size_selected':
            self.pizza_size = 'big'
        elif self.state == 'small_size_selected':
            self.pizza_size = 'small'

    def ask_payment_method(self):
        self.message = '–ö–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ –ø–ª–∞—Ç–∏—Ç—å?'

    def select_payment_method(self):
        if self.state == 'cash_payment_method':
            self.payment_method = 'cash'
        elif self.state == 'card_payment_selected':
            self.payment_method = 'card'

    def ask_about_order_confirmation(self):
        self.message = f'–í—ã —Ö–æ—Ç–∏—Ç–µ {self.pizza_size} –ø–∏—Ü—Ü—É, –æ–ø–ª–∞—Ç–∞ - {self.payment_method}?'

    def acknowledge_order(self):
        self.message = '–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start'
        self.confirmed = True

    def reject_order(self):
        self.message = '–ñ–∞–ª—å —á—Ç–æ –≤—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å( –ï—Å–ª–∏ –≤—Å—ë –∂–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start'

    def cleanse_order(self):
        self.payment_method = None
        self.pizza_size = None
        self.confirmed = False

    def ask_about_order(self):
        self.message = self.starting_message
